{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SudoMsg",
  "description": "This should only be sudo-callable by the governance module of the chain.",
  "anyOf": [
    {
      "description": "Executes an immediate burn of any funds held by the contract",
      "type": "object",
      "required": [
        "execute_burn"
      ],
      "properties": {
        "execute_burn": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Sends the specified amount from the contract balance to a nominated address",
      "type": "object",
      "required": [
        "execute_send"
      ],
      "properties": {
        "execute_send": {
          "type": "object",
          "required": [
            "amount",
            "recipient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "recipient": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Sends all funds held by the contract to a nominated address",
      "type": "object",
      "required": [
        "execute_send_all"
      ],
      "properties": {
        "execute_send_all": {
          "type": "object",
          "required": [
            "recipient"
          ],
          "properties": {
            "recipient": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
